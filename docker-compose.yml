version: "3.9"

services:
  postgres_auth:
    image: postgres:15
    container_name: postgres_auth
    restart: always
    environment:
      POSTGRES_USER: auth_user
      POSTGRES_PASSWORD: auth_password
      POSTGRES_DB: auth_db
    ports:
      - "5434:5432"
    volumes:
      - postgres_auth_data:/var/lib/postgresql/data
    networks:
      - backend

  postgres_task:
    image: postgres:15
    container_name: postgres_task
    restart: always
    environment:
      POSTGRES_USER: task_user
      POSTGRES_PASSWORD: task_password
      POSTGRES_DB: task_db
    ports:
      - "5435:5432"
    volumes:
      - postgres_task_data:/var/lib/postgresql/data
    networks:
      - backend

  auth_service:
    build:
      context: ./auth_service
    container_name: auth_service
    restart: always
    ports:
      - "8000:8000"
    env_file:
      - ./auth_service/src/.env
    depends_on:
      - postgres_auth
    networks:
      - backend

  task_service:
    build:
      context: ./task_service
    container_name: task_service
    restart: always
    ports:
      - "8888:8888"
    env_file:
      - ./task_service/src/.env
    depends_on:
      - postgres_task
      - auth_service
    networks:
      - backend

  # analytics_service:
  #   build:
  #     context: ./analytics_service
  #   container_name: analytics_service
  #   restart: always
  #   env_file:
  #     - ./analytics_service/src/.env
  #   depends_on:
  #     - postgres
  #     - task_service
  #   networks:
  #     - backend

  # api_gateway:
  #   build:
  #     context: ./api_gateway
  #   container_name: api_gateway
  #   restart: always
  #   ports:
  #     - "8000:8000"
  #   depends_on:
  #     - auth_service
  #     - task_service
  #     # - analytics_service
  #   networks:
  #     - backend

volumes:
  postgres_auth_data:
  postgres_task_data:
  postgres_analytics_data:

networks:
  backend:
    driver: bridge
